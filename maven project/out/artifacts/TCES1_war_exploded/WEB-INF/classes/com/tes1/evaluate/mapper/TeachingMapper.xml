<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tes1.evaluate.mapper.TeachingMapper">
  <resultMap id="BaseResultMap" type="com.tes1.evaluate.domain.Teaching">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="batchId" jdbcType="INTEGER" property="batchId" />
    <result column="classId" jdbcType="INTEGER" property="classId" />
    <result column="courseId" jdbcType="INTEGER" property="courseId" />
    <result column="teacherId" jdbcType="INTEGER" property="teacherId" />
  </resultMap>
  <!-- 授课表查询 -->
<select id="findteachingbyId"  resultType="com.tes1.evaluate.domain.Teaching" >
 select*from teaching
 where id=#{id}
</select>

	<select id="findteachingDetailbyId"  parameterType="java.lang.Integer"  resultType="com.tes1.evaluate.domain.Teaching" >
	 select*from teaching
	 where id=#{rowId}
	</select>
 
  
  <delete id="deleteTeachinginfoByIds" parameterType="java.lang.Integer">
    DELETE FROM teaching WHERE id IN
	<foreach collection="list" item="id" separator="," open="(" close=")">
       #{id}
    </foreach>
  </delete>
   
  <delete id="deleteByCourseId" parameterType="java.lang.Integer" >
   delete from teaching
    where courseId = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tes1.evaluate.domain.Teaching">
    insert into teaching (Id, classId, courseId, 
      teacherId)
    values (#{id,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="addTeaching" parameterType="com.tes1.evaluate.domain.Teaching">
    INSERT into teaching(batchId,classId,courseId,teacherId)
    VALUES(#{batchId},#{classId},#{courseId},#{teacherId})
  </insert>
  <update id="" parameterType="com.tes1.evaluate.domain.Teaching">
    update teaching
    <set>
      <if test="classId != null">
        classId = #{classId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        teacherId = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateTeaching" parameterType="com.tes1.evaluate.domain.Teaching" >
    update teaching
    set classId = #{classId,jdbcType=INTEGER},
        batchId=#{batchId,jdbcType=INTEGER},
        courseId = #{courseId,jdbcType=INTEGER},
        teacherId = #{teacherId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
  </update>
 <!-- 显示所有分页数据 -->
<select id="getTeachingListTotal" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*)    
      FROM teaching 
     WHERE 1=1 
 </select>
<select id="getTeachingList" resultType="com.tes1.evaluate.domain.TeachingInfo">
  SELECT a.Id,batchName,className,courseName,userName,departmentName
	 from teaching a
	 inner join batch e on e.Id=a.batchId
	 inner join classinfo b on b.Id=a.classId
     inner join course c on c.Id=a.courseId
     inner join user d on d.Id=a.teacherId
     inner join department f on f.Id=d.depId 
 ORDER BY id
   LIMIT #{page},#{rows} 
</select>

<select id="getTeachingidList" resultType="com.tes1.evaluate.domain.TeachingInfo">
  SELECT a.Id,batchName,className,courseName,userName,departmentName
	 from teaching a
	 inner join batch e on e.Id=a.batchId
	 inner join classinfo b on b.Id=a.classId
     inner join course c on c.Id=a.courseId
     inner join user d on d.Id=a.teacherId
     inner join department f on f.Id=d.depId 
     <where>
     <if test="batchid != 0">
     e.Id=#{batchid}
     </if>
     
     <if test="classid != 0" >
     and b.Id=#{classid}
     </if>
     
     <if test="teacherid != 0" >
     and d.Id=#{teacherid}
     </if>
     </where>
 ORDER BY id
   LIMIT #{page},#{rows} 
</select>
<select id="groupbyTeachingidList" resultType="com.tes1.evaluate.domain.TeachingInfo">
  SELECT a.Id,batchName,className,courseName,userName,departmentName
	 from teaching a
	 inner join batch e on e.Id=a.batchId
	 inner join classinfo b on b.Id=a.classId
     inner join course c on c.Id=a.courseId
     inner join user d on d.Id=a.teacherId
     inner join department f on f.Id=d.depId     
     <where>
     <if test="batchid != 0">
     e.Id=#{batchid}
     </if>     
     <if test="classid != 0" >
     and b.Id=#{classid}
     </if>     
     <if test="teacherid != 0" >
     and d.Id!=#{teacherid}
     </if>
     </where>
     GROUP by c.Id
     ORDER BY id
     LIMIT #{page},#{rows} 
</select>
<!-- 显示查询分页数据 -->
<select id="getTeachingSearchListTotal" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*)    
      FROM teaching 
     WHERE 1=1
     <if test="batchId!=null and !batchId.equals('')"> and batchId=#{batchId}</if>
     <if test="classId!=null and !classId.equals('')"> and classId=#{classId}</if>
     <if test="courseId!=null and !courseId.equals('')"> and courseId=#{courseId}</if>
 </select>
 <select id="getTeachingSearchList" resultType="com.tes1.evaluate.domain.TeachingInfo">
  SELECT a.Id,batchName,className,courseName,userName,departmentName
	 from teaching a
	 inner join batch e on e.Id=a.batchId
	 inner join classinfo b on b.Id=a.classId
     inner join course c on c.Id=a.courseId
     inner join user d on d.Id=a.teacherId
     inner join department f on f.Id=d.depId 
   where 1=1
   <if test="batchName!=null and !batchName.equals('')"> and batchName=#{batchName}</if>
   LIMIT #{page},#{rows} 
</select>
</mapper>